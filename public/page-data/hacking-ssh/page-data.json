{"componentChunkName":"component---src-components-posts-post-template-index-jsx","path":"/hacking-ssh/","result":{"data":{"markdownRemark":{"html":"<p>Cool things you can do with an ssh client, and a Linux machine. Secure Shell is\na protocol to connect to a machine over the network securely. The <a href=\"https://www.openssh.com/\" target=\"_blank\"><code class=\"language-text\">OpenSSH</code></a> client is more than just a secure shell. It has quite a few features that makes it uniquely useful when connecting two or more machines together.</p>\n<p>This post is inspired by <a href=\"https://smallstep.com/blog/ssh-tricks-and-tips/\" target=\"_blank\">ssh tips and tricks</a>.</p>\n<h2 id=\"logging-in-without-a-password\" style=\"position:relative;\"><a href=\"#logging-in-without-a-password\" aria-label=\"logging in without a password permalink\" class=\"anchor-heading before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Logging in without a password</h2>\n<p>There are other methods of authentication than a password that OpenSSH supports. One of the most well-known authentication methods is a public key authentication. You can basically maintain a list of known public keys on the server and allow passwordless login whenever a client connects using the corresponding private key.</p>\n<div class=\"gatsby-code-title code-title-custom\">authorized_keys</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span></span>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCm7Q3M5QH7aoFL<span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>The above can be copied from an RSA key that usually exists in <code class=\"language-text\">~/.ssh</code> on Linux machines.</p>\n<p>A key can be added to a server using the <code class=\"language-text\">ssh-copy-id</code> command if you already have another way of connecting to the server.</p>\n<h2 id=\"running-a-command\" style=\"position:relative;\"><a href=\"#running-a-command\" aria-label=\"running a command permalink\" class=\"anchor-heading before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running a command</h2>\n<p>You can pass a command to run on the remote machine, the command will run inside\nyour default shell and the output is printed to the standard output.</p>\n<p>For example you can check the date and time on the server:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span></span><span class=\"token function\">ssh</span> the-internet <span class=\"token function\">date</span>\nSat 02 May <span class=\"token number\">2020</span> <span class=\"token number\">11</span>:51:10 PM +08</code></pre></div>\n<p>That's a very cool feature, considering that you can connect to both the output <em>and</em> the input of the command.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span><span></span></span><span class=\"token function\">ssh</span> -t the-internet <span class=\"token string\">'read -pecho: x; echo <span class=\"token variable\">$x</span>'</span>\necho:hello\nhello</code></pre></div>\n<p>The <code class=\"language-text\">-t</code> option above is necessary to make the <code class=\"language-text\">echo:</code> prompt appear on the screen. But even without that option we can still interact with the input of the <code class=\"language-text\">read</code> command.</p>\n<h2 id=\"copying-a-file-over-the-server\" style=\"position:relative;\"><a href=\"#copying-a-file-over-the-server\" aria-label=\"copying a file over the server permalink\" class=\"anchor-heading before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Copying a file over the server</h2>\n<p>A file can be uploaded to or downloaded from the server easily if we have access to execute commands.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span data-user=u data-host=h></span><span data-user=u data-host=h></span><span></span></span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'Hello world!'</span> <span class=\"token operator\">></span> /tmp/message\n<span class=\"token function\">cat</span> /tmp/message <span class=\"token operator\">|</span><span class=\"token function\">ssh</span> the-internet <span class=\"token string\">'cat - > /tmp/remote-message'</span>\n<span class=\"token function\">ssh</span> the-internet <span class=\"token string\">'cat /tmp/remote-message'</span>\nHello world<span class=\"token operator\">!</span></code></pre></div>\n<h2 id=\"copying-large-files-fast\" style=\"position:relative;\"><a href=\"#copying-large-files-fast\" aria-label=\"copying large files fast permalink\" class=\"anchor-heading before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Copying large files fast</h2>\n<p>With a little help of our friend <code class=\"language-text\">gzip</code> we can even upload/download large files. We are using a file containing only zeros, and therefore very easy to zip, but in reality text files are usually easy to zip as well, therefore this method is actually useful.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span></span><span class=\"token function\">ssh</span> the-internet <span class=\"token string\">'du -Dsh /var/tmp/large'</span>\n<span class=\"token number\">1</span>.0G\t/var/tmp/large</code></pre></div>\n<p>Now using <code class=\"language-text\">gzip</code> we can zip the file and send the zipped file to <code class=\"language-text\">gunzip</code> on our local machine to extract:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span><span></span><span></span><span></span></span><span class=\"token function\">time</span> <span class=\"token function\">ssh</span> the-internet <span class=\"token string\">'gzip --stdout /var/tmp/large'</span> <span class=\"token operator\">|</span> gunzip <span class=\"token operator\">></span> /var/tmp/large\n\nreal\t0m19.457s\nuser\t0m5.468s\nsys\t0m0.715s</code></pre></div>\n<p>We have a large file in our local machine now:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span></span><span class=\"token function\">du</span> -sh /var/tmp/large\n<span class=\"token number\">1</span>.1G\t/var/tmp/large</code></pre></div>\n<h2 id=\"advanced-downloading-using-pv\" style=\"position:relative;\"><a href=\"#advanced-downloading-using-pv\" aria-label=\"advanced downloading using pv permalink\" class=\"anchor-heading before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Advanced downloading using pv</h2>\n<p>Suppose you want to see the progress of the file being downloaded, you can even control the rate of download. Suppose we have a large file:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span></span><span class=\"token function\">ssh</span> the-internet <span class=\"token string\">'du -Dsh /var/tmp/random'</span>\n217M\t/var/tmp/random</code></pre></div>\n<p>We can see a progress bar when downloading the file (this requires <code class=\"language-text\">pv</code> to be installed):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span></span><span class=\"token function\">ssh</span> the-internet <span class=\"token string\">'cat /var/tmp/random'</span> <span class=\"token operator\">|</span> <span class=\"token function\">pv</span> -s217m <span class=\"token operator\">|</span> <span class=\"token function\">cat</span> - <span class=\"token operator\">></span> random\n 103MiB <span class=\"token number\">0</span>:00:14 <span class=\"token punctuation\">[</span><span class=\"token number\">7</span>.81MiB/s<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>        <span class=\"token punctuation\">]</span> <span class=\"token number\">47</span>% ETA <span class=\"token number\">0</span>:00:15</code></pre></div>\n<p>The <code class=\"language-text\">-s217m</code> tells <code class=\"language-text\">pv</code> about the size of the file, if not given the percentage cannot be calculated.</p>\n<p>Or we can limit the download rate to <code class=\"language-text\">1 MB</code> using <code class=\"language-text\">-L1m</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span></span><span class=\"token function\">ssh</span> the-internet <span class=\"token string\">'cat /var/tmp/random'</span> <span class=\"token operator\">|</span> <span class=\"token function\">pv</span> -s217m -L1m <span class=\"token operator\">|</span> <span class=\"token function\">cat</span> - <span class=\"token operator\">></span> random\n<span class=\"token number\">20</span>.0MiB <span class=\"token number\">0</span>:00:20 <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>.00MiB/s<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">></span>             <span class=\"token punctuation\">]</span>  <span class=\"token number\">9</span>% ETA <span class=\"token number\">0</span>:03:17</code></pre></div>\n<h2 id=\"running-a-command-on-multiple-servers\" style=\"position:relative;\"><a href=\"#running-a-command-on-multiple-servers\" aria-label=\"running a command on multiple servers permalink\" class=\"anchor-heading before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running a command on multiple servers</h2>\n<p>There are times when we want to run a repatitive command on multiple servers, we can automate this using ssh. In fact that's how <a href=\"https://www.ansible.com/\" target=\"_blank\"><code class=\"language-text\">Ansible</code></a> works.</p>\n<p>One use-case might be to change password for a user on multiple machines. Let's change password for <code class=\"language-text\">terminator</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span></span><span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"supersecure<span class=\"token entity\" title=\"\\n\">\\n</span>supersecure\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">ssh</span> the-internet <span class=\"token string\">'sudo passwd terminator'</span>\nNew password: Retype new password: passwd: password updated successfully</code></pre></div>\n<p>We can type in the hosts that will change the <code class=\"language-text\">terminator</code> password:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span data-user=u data-host=h></span><span></span><span data-user=u data-host=h></span><span></span></span><span class=\"token function\">xargs</span> -IHOST <span class=\"token function\">sh</span> -c <span class=\"token string\">'echo \"supersecure<span class=\"token entity\" title=\"\\n\">\\n</span>supersecure\" | ssh HOST \"sudo passwd terminator\"'</span>\nthe-internet\nNew password: Retype new password: passwd: password updated successfully\nthe-skynet\nNew password: Retype new password: passwd: password updated successfully</code></pre></div>\n<p>Or we can automate that and provide the list of hosts:</p>\n<div class=\"gatsby-code-title code-title-custom\">hosts</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">the-internet\nthe-skynet</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span><span></span></span><span class=\"token function\">xargs</span> -IHOST <span class=\"token function\">sh</span> -c <span class=\"token string\">'echo \"supersecure<span class=\"token entity\" title=\"\\n\">\\n</span>supersecure\" | ssh HOST \"sudo passwd terminator\"'</span> <span class=\"token operator\">&lt;</span> hosts\nNew password: Retype new password: passwd: password updated successfully\nNew password: Retype new password: passwd: password updated successfully</code></pre></div>\n<h2 id=\"persistent-ssh-session\" style=\"position:relative;\"><a href=\"#persistent-ssh-session\" aria-label=\"persistent ssh session permalink\" class=\"anchor-heading before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Persistent ssh session</h2>\n<p>Now let's see how we can make use of a combination of ssh and <code class=\"language-text\">tmux</code>. <code class=\"language-text\">tmux</code> can be used to have an on-going shell in your server that multiple people can connect to.</p>\n<p>To start a session called <code class=\"language-text\">mysession</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span></span><span class=\"token function\">ssh</span> -t the-internet <span class=\"token string\">'tmux new-session -ds mysession'</span>\nConnection to the-internet closed.</code></pre></div>\n<p>The <code class=\"language-text\">-t</code> tells ssh client to allocate a tty device for using with the tmux session.</p>\n<p>Now anyone with ssh access to that server can connect to the session.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span><span></span></span><span class=\"token function\">ssh</span> -t the-internet <span class=\"token string\">'tmux attach -t mysession'</span>\n<span class=\"token punctuation\">[</span>detached <span class=\"token punctuation\">(</span>from session mysession<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nConnection to the-internet closed.</code></pre></div>\n<p>It is important to detach from the tmux session rather than exit from it if you want to keep it open for the next time.</p>\n<p>You can get a list of clients connected to that session at the moment:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=u data-host=h></span><span></span><span></span></span><span class=\"token function\">ssh</span> -t the-internet <span class=\"token string\">'tmux list-clients -t mysession'</span>\n/dev/pts/1: mysession <span class=\"token punctuation\">[</span>150x36 xterm-256color<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>utf8<span class=\"token punctuation\">)</span>\nConnection to the-internet closed.</code></pre></div>","excerpt":"Cool things you can do with an ssh client, and a Linux machine. Secure Shell is\na protocol to connect to a machine over the network securely…","fields":{"slug":"/hacking-ssh/"},"frontmatter":{"title":"Hacking ssh command","date":"04/28/2020","tags":["hacking"]}}},"pageContext":{"slug":"/hacking-ssh/"}}}